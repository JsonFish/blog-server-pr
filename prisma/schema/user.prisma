// 用户表定义
model User {
    id       String  @id @unique @db.VarChar(16) // 使用 UUID，长度限制为36
    email    String  @unique @db.VarChar(100) // 唯一的邮箱，长度限制为100
    username String  @unique @db.VarChar(30) // 用户名，长度限制为30
    password String  @db.VarChar(255) // 用户密码，最长255个字符
    role_id  Int // 角色外键，关联 Role 表
    role     Role    @relation("UserRole", fields: [role_id], references: [id], onDelete: Restrict) // 关联角色，使用 Restrict 策略
    status   Boolean @default(true) // 用户状态，默认是激活状态
    phone    String? @default("") @db.VarChar(20) // 用户手机号，最长20个字符，可选
    avatar   String? @default("") @db.VarChar(255) // 头像 URL，最多255个字符

    profile Profile? @relation("UserProfile") // 去掉 `onDelete` 行为，交由 Profile 来处理

    created_at DateTime @default(now()) // 创建时间
    updated_at DateTime @updatedAt // 更新时间

    chat_user      ChatUser[]
    chats_as_user1 Chat[]     @relation("User1Chats")
    chats_as_user2 Chat[]     @relation("User2Chats")

    follows   UserFollow[] @relation("user_follows") // 当前用户关注的用户
    followers UserFollow[] @relation("user_followed") // 当前用户的粉丝
}

// 个人资料模型定义
model Profile {
    id      Int    @id @default(autoincrement()) // 自动递增的 ID
    user_id String @unique @db.VarChar(36) // 使用全数字 UUID 作为外键关联用户
    user    User   @relation(fields: [user_id], references: [id], name: "UserProfile", onDelete: Cascade) // 在这里保留 onDelete

    // 用户个人信息
    desc   String?   @default("") @db.VarChar(500) // 用户个人简介，最多500个字符
    gender Int?      @default(2) // 性别，默认值为 2 (OTHER)
    birth  DateTime? // 出生日期，去掉默认值

    // 用户统计信息
    points  Int  @default(0) // 用户积分
    ranking Int? @default(99999) // 用户排名，默认值为 99999

    job_title  String?  @default("") @db.VarChar(100) // 用户职位名称，最多100个字符
    company    String?  @default("") @db.VarChar(100) // 用户所在公司，最多100个字符
    location   String?  @default("") @db.VarChar(100) // 用户位置（城市、国家），最多100个字符
    website    String?  @default("") @db.VarChar(255) // 用户的个人网站或博客链接，最多255个字符
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}
